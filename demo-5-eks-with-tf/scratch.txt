output "cluster_id" {
  value = aws_eks_cluster.this.id
}

output "cluster_iam_role_name" {
  value = module.eks.cluster_iam_role_name
}

provider "kubernetes" {
  host                   = module.eks.cluster_endpoint
  cluster_ca_certificate = base64decode(module.eks.cluster_certificate_authority_data)
  token                  = data.aws_eks_cluster_auth.auth.token
}

data "aws_eks_cluster_auth" "auth" {
  name = module.eks.cluster_id
}



resource "null_resource" "apply_k8s_config" {
  provisioner "local-exec" {
    command = "./apply-k8s-config.sh"
    environment = {
      KUBECONFIG = "${path.module}/kubeconfig_${module.eks.cluster_id}"
    }
  }

  depends_on = [
    module.eks,
  ]
}



resource "aws_iam_role" "this" {
  name = module.eks.cluster_iam_role_name
  # Other attributes...

  tags = {
    "application" = "myapp"
    "environment" = "development"
  }

  # Ignore changes to inline policies
  lifecycle {
    ignore_changes = [
      inline_policy
    ]
  }
}